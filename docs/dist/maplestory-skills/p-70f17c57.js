import{d as e}from"./p-d91599c0.js";import{a as l}from"./p-7c277b0f.js";function i(e,i,r){let s={},p=0,o=0;r&&e[r.prop]>0&&r.skillRequirements&&r.skillRequirements.forEach(l=>{!function e(l,i){l[i.skill.prop]<i.level&&(l[i.skill.prop]=i.level),i.skill.skillRequirements&&i.skill.skillRequirements.forEach(i=>{e(l,i)})}(e,l)}),Object.keys(i).forEach(r=>{let t=i[r];t.rank===l.Basic?p+=e[t.prop]:o+=e[t.prop],s[t.prop]={locked:!1,required:void 0,limitReached:!1}}),r&&r.rank===l.Basic&&p>72&&(e[r.prop]-=p-72),r&&r.rank===l.Awakening&&o>15&&(e[r.prop]-=o-15),Object.keys(i).forEach(r=>{let t=i[r];if(t.skillRequirements&&t.skillRequirements.forEach(l=>{e[l.skill.prop]<l.level&&(s[t.prop].locked=!0,e[t.prop]=0)}),s[t.prop].limitReached=t.rank===l.Basic?p>=72:o>=15,0===e[t.prop]){let i=function(e,l){let i={};return l.skillRequirements?(function l(r){r.skillRequirements.forEach(r=>{let s=Math.max(0,r.level-e[r.skill.prop]);(!i[r.skill.prop]||i[r.skill.prop]<s)&&(i[r.skill.prop]=s),r.skill.skillRequirements&&l(r.skill)})}(l),Object.keys(i).reduce((e,l)=>e+i[l],0)):0}(e,t);t.rank===l.Basic?i+1>72-p&&(s[t.prop].limitReached=!0):i+1>15-o&&(s[t.prop].limitReached=!0)}}),e.skills=s}function r(e,l,i){if(l.skillRequirements){let r=!1;l.skillRequirements.forEach(l=>{if(e[l.skill.prop]<l.level){let s=i?`Level ${l.level}+`:void 0;e.skills[l.skill.prop].required!==s&&(e.skills[l.skill.prop].required=s,r=!0)}}),r&&(e.skills=Object.assign({},e.skills))}}function s(i,s,p,o=!1,t=l.Basic,k){return Object.keys(s).map(l=>{let a=s[l],n=i.skills[a.prop];return e("ms-skill",Object.assign({slot:"rank-"+t,class:a.prop,skill:a,level:i[a.prop],locked:n.locked,required:n.required,limitReached:n.limitReached,disabled:!p,loop:p,onLevelchanged:e=>i.levelChanged(a,e.detail),onMouseEnter:()=>n.locked&&r(i,a,!0),onMouseLeave:()=>n.locked&&r(i,a,!1),extras:o},k))})}function p(e,l,i){let r={rank:e.rank,skills:Object.keys(l).map(i=>{let r=l[i];return{skill:r.name,attr:r.attr,prop:r.prop,level:e[r.prop],minLevel:r.minLevel,maxLevel:r.maxLevel,rank:r.rank}})};return i&&(r.other=Object.keys(i).map(e=>({attr:e,value:i[e]}))),r}export{i as a,p as b,s as c};